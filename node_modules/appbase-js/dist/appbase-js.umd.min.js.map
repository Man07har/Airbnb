{"version":3,"file":"appbase-js.umd.min.js","sources":["../node_modules/url-parser-lite/index.js","../src/utils/index.js","../src/utils/schema/index.js","../src/utils/schema/mongodb.js","../src/utils/schema/elasticsearch.js","../src/core/index.js","../node_modules/rollup-plugin-node-builtins/src/es6/qs.js","../node_modules/cross-fetch/dist/browser-ponyfill.js","../src/core/request/fetch.js","../src/core/api/index.js","../src/core/api/get.js","../src/core/api/update.js","../src/core/api/delete.js","../src/core/api/bulk.js","../src/core/api/search.js","../src/core/api/msearch.js","../src/core/api/reactiveSearchApi.js","../src/core/api/reactiveSearchv3Api.js","../src/core/api/getMappings.js","../src/core/api/getSuggestionsv3Api.js","../src/index.js"],"sourcesContent":["function URL(url) {\n    var pattern = RegExp(\"^(([^:/?#]*)?://)?(((.*)?@)?([^/?#]*)?)([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n    var matches = url.match(pattern);\n\n    return {\n        protocol: matches[2],\n        auth: matches[5],\n        host: matches[6],\n        path: matches[7],\n        query: matches[9],\n        hash: matches[11]\n    };\n}\n\nmodule.exports = URL;\n","export function contains(string, substring) {\n  return string.indexOf(substring) !== -1;\n}\nexport function isAppbase(url) {\n  return contains(url, 'scalr.api.appbase.io');\n}\nexport function btoa(input = '') {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  const str = input;\n  let output = '';\n\n  // eslint-disable-next-line\n  for (\n    let block = 0, charCode, i = 0, map = chars;\n    str.charAt(i | 0) || ((map = '='), i % 1); // eslint-disable-line no-bitwise\n    output += map.charAt(63 & (block >> (8 - (i % 1) * 8))) // eslint-disable-line no-bitwise\n  ) {\n    charCode = str.charCodeAt((i += 3 / 4));\n\n    if (charCode > 0xff) {\n      throw new Error(\n        '\"btoa\" failed: The string to be encoded contains characters outside of the Latin1 range.',\n      );\n    }\n\n    block = (block << 8) | charCode; // eslint-disable-line no-bitwise\n  }\n\n  return output;\n}\nexport function uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0; // eslint-disable-line no-bitwise\n\n    const v = c === 'x' ? r : (r & 0x3) | 0x8; // eslint-disable-line no-bitwise\n    return v.toString(16);\n  });\n}\n\nexport function validateRSQuery(query) {\n  if (query && Object.prototype.toString.call(query) === '[object Array]') {\n    for (let i = 0; i < query.length; i += 1) {\n      const q = query[i];\n      if (q) {\n        if (!q.id) {\n          return new Error(\"'id' field must be present in query object\");\n        }\n      } else {\n        return new Error('query object can not have an empty value');\n      }\n    }\n    return true;\n  }\n  return new Error(\"invalid query value, 'query' value must be an array\");\n}\n\nexport function validate(object, fields) {\n  const invalid = [];\n  const emptyFor = {\n    object: null,\n    string: '',\n    number: 0,\n  };\n  const keys = Object.keys(fields);\n  keys.forEach((key) => {\n    const types = fields[key].split('|');\n    const matchedType = types.find(\n      type =>\n        // eslint-disable-next-line\n        typeof object[key] === type\n    );\n    if (!matchedType || object[key] === emptyFor[matchedType]) {\n      invalid.push(key);\n    }\n  });\n  let missing = '';\n  for (let i = 0; i < invalid.length; i += 1) {\n    missing += `${invalid[i]}, `;\n  }\n  if (invalid.length > 0) {\n    return new Error(`fields missing: ${missing}`);\n  }\n\n  return true;\n}\n\nexport function removeUndefined(value = {}) {\n  if (\n    value\n    || !(Object.keys(value).length === 0 && value.constructor === Object)\n  ) {\n    return JSON.parse(JSON.stringify(value));\n  }\n  return null;\n}\n\n/**\n * Send only when a connection is opened\n * @param {Object} socket\n * @param {Function} callback\n */\nexport function waitForSocketConnection(socket, callback) {\n  setTimeout(() => {\n    if (socket.readyState === 1) {\n      if (callback != null) {\n        callback();\n      }\n    } else {\n      waitForSocketConnection(socket, callback);\n    }\n  }, 5); // wait 5 ms for the connection...\n}\n\nexport function encodeHeaders(headers = {}, shouldEncode = true) {\n  // Encode headers\n  let encodedHeaders = {};\n  if (shouldEncode) {\n    Object.keys(headers).forEach((header) => {\n      encodedHeaders[header] = encodeURI(headers[header]);\n    });\n  } else {\n    encodedHeaders = headers;\n  }\n  return encodedHeaders;\n}\nexport function getMongoRequest(app, mongo) {\n    const mongodb = {};\n    if (app) {\n      mongodb.index = app;\n    }\n    if (mongo) {\n      if (mongo.db) {\n        mongodb.db = mongo.db;\n      }\n      if (mongo.collection) {\n        mongodb.collection = mongo.collection;\n      }\n    }\n    return mongodb;\n  }\n\nexport function getTelemetryHeaders(enableTelemetry, shouldSetHeaders) {\n  const headers = {};\n  if (!shouldSetHeaders) {\n    return headers;\n  }\n    Object.assign(headers, {\n      'X-Search-Client': 'Appbase JS',\n    });\n\n  if (enableTelemetry === false) {\n    Object.assign(headers, {\n      'X-Enable-Telemetry': enableTelemetry,\n    });\n  }\n\n  return headers;\n}\n\n\nexport const backendAlias = {\n  MONGODB: 'mongodb', // mongodb\n  ELASTICSEARCH: 'elasticsearch', // elasticsearch\n};\nexport const dataTypes = {\n  ARRAY: 'array',\n  FUNCTION: 'function',\n  OBJECT: 'object',\n  NUMBER: 'number',\n  BOOLEAN: 'boolean',\n  STRING: 'string',\n};\nconst checkDataType = (temp) => {\n  // eslint-disable-next-line\n  if (typeof temp === dataTypes.OBJECT) {\n    if (Array.isArray(temp)) {\n      return dataTypes.ARRAY;\n    }\n\n    return dataTypes.OBJECT;\n  }\n  return typeof temp;\n};\n\nexport function validateSchema(\n  passedProperties = {},\n  schema = {},\n  backendName = '',\n) {\n  const passedPropertiesKeys = Object.keys(passedProperties).filter(\n    propertyKey => !!passedProperties[propertyKey],\n  );\n  const acceptedProperties = Object.keys(schema);\n  const requiredProperties = [];\n  // fetch required properties\n  acceptedProperties.forEach((propName) => {\n    const currentProperty = schema[propName];\n      if (currentProperty.required) {\n        requiredProperties.push(propName);\n      }\n  });\n  // check for required properties\n  requiredProperties.forEach((requiredProperty) => {\n    if (!passedPropertiesKeys.includes(requiredProperty)) {\n      throw new Error(\n        `${requiredProperty} is required when using the ${backendName} Search backend.`,\n      );\n    }\n  });\n\n  // check for accepted properties\n  passedPropertiesKeys.forEach((passedPropertyKey) => {\n    if (!acceptedProperties.includes(passedPropertyKey)) {\n      throw new Error(\n        `${passedPropertyKey} property isn't accepted property by ${backendName} backend.`,\n      );\n    }\n\n    const acceptedTypes = Array.isArray(schema[passedPropertyKey].type)\n      ? schema[passedPropertyKey].type\n      : [...schema[passedPropertyKey].type];\n    const receivedPropertyType = checkDataType(\n      passedProperties[passedPropertyKey],\n    );\n    if (!acceptedTypes.includes(receivedPropertyType)) {\n      throw new Error(\n        `The property ${passedPropertyKey} is expected with type(s) [${acceptedTypes.join(\n          ', ',\n        )}], but type was set as ${receivedPropertyType}.`,\n      );\n    }\n  });\n}\n","import mongodb from './mongodb';\nimport elasticsearch from './elasticsearch';\n\nexport default { mongodb, elasticsearch };\n","import { dataTypes } from '../index';\n\nexport default {\n  url: {\n    type: dataTypes.STRING,\n    required: true,\n  },\n  app: {\n    type: dataTypes.STRING,\n    required: false,\n  },\n  credentials: {\n    type: dataTypes.STRING,\n    required: false,\n  },\n  enableTelemetry: {\n    type: dataTypes.BOOLEAN,\n    required: false,\n  },\n  mongodb: {\n    type: dataTypes.OBJECT,\n    required: true,\n  },\n  username: {\n    type: dataTypes.STRING,\n    required: false,\n  },\n  password: {\n    type: dataTypes.STRING,\n    required: false,\n  },\n};\n","import { dataTypes } from '../index';\n\nexport default {\n  url: {\n    type: dataTypes.STRING,\n    required: true,\n  },\n  app: {\n    type: dataTypes.STRING,\n    required: true,\n  },\n  credentials: {\n    type: dataTypes.STRING,\n    required: false,\n  },\n  enableTelemetry: {\n    type: dataTypes.BOOLEAN,\n    required: false,\n  },\n  username: {\n    type: dataTypes.STRING,\n    required: false,\n  },\n  password: {\n    type: dataTypes.STRING,\n    required: false,\n  },\n};\n","import URL from 'url-parser-lite';\nimport { backendAlias, isAppbase, validateSchema } from '../utils/index';\nimport SCHEMA from '../utils/schema/index';\n/**\n * Returns an instance of Appbase client\n * @param {Object} config To configure properties\n * @param {String} config.url\n * @param {String} config.app\n * @param {String} config.credentials\n * @param {String} config.username\n * @param {String} config.password\n * @param {Boolean} config.enableTelemetry\n * @param {Object} config.mongodb\n * A callback function which will be invoked before a fetch request made\n */\nfunction AppBase(config) {\n  const {\n    auth = null,\n    host = '',\n    path = '',\n    protocol = '',\n  } = URL(config.url || '');\n  let { url } = config;\n  url = host + path;\n  // Parse url\n  if (url.slice(-1) === '/') {\n    url = url.slice(0, -1);\n  }\n  const backendName = backendAlias[config.mongodb ? 'MONGODB' : 'ELASTICSEARCH'];\n  // eslint-disable-next-line\n  const schema = SCHEMA[backendName];\n  validateSchema(\n    {\n      url: config.url,\n      app: config.app,\n      credentials: config.credentials,\n      username: config.username,\n      password: config.password,\n      enableTelemetry: config.enableTelemetry,\n      mongodb: config.mongodb,\n    },\n    schema,\n    backendName,\n  );\n\n  if (typeof protocol !== 'string' || protocol === '') {\n    throw new Error(\n      'Protocol is not present in url. URL should be of the form https://appbase-demo-ansible-abxiydt-arc.searchbase.io',\n    );\n  }\n\n  let credentials = auth || null;\n  /**\n   * Credentials can be provided as a part of the URL,\n   * as username, password args or as a credentials argument directly */\n  if (typeof config.credentials === 'string' && config.credentials !== '') {\n    // eslint-disable-next-line\n    credentials = config.credentials;\n  } else if (\n    typeof config.username === 'string'\n    && config.username !== ''\n    && typeof config.password === 'string'\n    && config.password !== ''\n  ) {\n    credentials = `${config.username}:${config.password}`;\n  }\n  if (!config.mongodb) {\n    if (isAppbase(url) && credentials === null) {\n      throw new Error(\n        'Authentication information is not present. Did you add credentials?',\n      );\n    }\n  }\n\n  this.url = url;\n  this.protocol = protocol;\n  this.app = config.app;\n  this.credentials = credentials;\n  if (config.mongodb) {\n    this.mongodb = config.mongodb;\n  }\n\n  if (typeof config.enableTelemetry === 'boolean') {\n    this.enableTelemetry = config.enableTelemetry;\n  }\n}\nexport default AppBase;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nexport function stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nexport function parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\nexport default {\n  encode: stringify,\n  stringify: stringify,\n  decode: parse,\n  parse: parse\n}\nexport {stringify as encode, parse as decode};\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","import querystring from 'querystring';\nimport fetch from 'cross-fetch';\nimport { btoa, removeUndefined } from '../../utils/index';\n\n/**\n * To perform fetch request\n * @param {Object} args\n * @param {String} args.method\n * @param {String} args.path\n * @param {Object} args.params\n * @param {Object} args.body\n * @param {Object} args.headers\n * @param {boolean} args.isSuggestionsAPI\n */\nfunction fetchRequest(args) {\n  return new Promise((resolve, reject) => {\n    const parsedArgs = removeUndefined(args);\n    try {\n      const {\n        method,\n        path,\n        params,\n        body,\n        isRSAPI,\n        isSuggestionsAPI,\n        isMongoRequest = false,\n      } = parsedArgs;\n      const app = isSuggestionsAPI ? '.suggestions' : this.app;\n      let bodyCopy = body;\n      const contentType = path.endsWith('msearch') || path.endsWith('bulk')\n          ? 'application/x-ndjson'\n          : 'application/json';\n      const headers = Object.assign(\n        {},\n        {\n          Accept: 'application/json',\n          'Content-Type': contentType,\n        },\n        args.headers,\n        this.headers,\n      );\n      const timestamp = Date.now();\n      if (this.credentials) {\n        headers.Authorization = `Basic ${btoa(this.credentials)}`;\n      }\n      const requestOptions = {\n        method,\n        headers,\n      };\n      if (Array.isArray(bodyCopy)) {\n        let arrayBody = '';\n        bodyCopy.forEach((item) => {\n          arrayBody += JSON.stringify(item);\n          arrayBody += '\\n';\n        });\n\n        bodyCopy = arrayBody;\n      } else {\n        bodyCopy = JSON.stringify(bodyCopy) || {};\n      }\n\n      if (Object.keys(bodyCopy).length !== 0) {\n        requestOptions.body = bodyCopy;\n      }\n\n      const handleTransformRequest = (res) => {\n        if (\n          this.transformRequest\n          && typeof this.transformRequest === 'function'\n        ) {\n          const tarnsformRequestPromise = this.transformRequest(res);\n          return tarnsformRequestPromise instanceof Promise\n            ? tarnsformRequestPromise\n            : Promise.resolve(tarnsformRequestPromise);\n        }\n        return Promise.resolve(res);\n      };\n\n      let responseHeaders = {};\n\n      let paramsString = '';\n      if (params) {\n        paramsString = `?${querystring.stringify(params)}`;\n      }\n      const finalURL = isMongoRequest\n        ? `${this.protocol}://${this.url}`\n        : `${this.protocol}://${this.url}/${app}/${path}${paramsString}`;\n\n      return handleTransformRequest(\n        Object.assign(\n          {},\n          {\n            url: finalURL,\n          },\n          requestOptions,\n        ),\n      )\n        .then((ts) => {\n          const transformedRequest = Object.assign({}, ts);\n          const { url } = transformedRequest;\n          delete transformedRequest.url;\n          return fetch(\n            url || finalURL,\n            Object.assign({}, transformedRequest, {\n              // apply timestamp header for RS API\n              headers:\n                isRSAPI && !isMongoRequest\n                  ? Object.assign({}, transformedRequest.headers, {\n                      'x-timestamp': new Date().getTime(),\n                    })\n                  : transformedRequest.headers,\n            }),\n          )\n            .then((res) => {\n              if (res.status >= 500) {\n                return reject(res);\n              }\n              responseHeaders = res.headers;\n              return res\n                .json()\n                .then((data) => {\n                  if (res.status >= 400) {\n                    return reject(res);\n                  }\n                  if (data && data.error) {\n                    return reject(data);\n                  }\n                  // Handle error from RS API RESPONSE\n                  if (\n                    isRSAPI\n                    && data\n                    && Object.prototype.toString.call(data) === '[object Object]'\n                  ) {\n                    if (body && body.query && body.query instanceof Array) {\n                      let errorResponses = 0;\n                      const allResponses = body.query.filter(\n                        q => q.execute || q.execute === undefined,\n                      ).length;\n\n                      if (data) {\n                        Object.keys(data).forEach((key) => {\n                          if (\n                            data[key]\n                            && Object.prototype.hasOwnProperty.call(\n                              data[key],\n                              'error',\n                            )\n                            && !!data[key].error\n                          ) {\n                            errorResponses += 1;\n                          }\n                        });\n                      }\n                      // reject only when all responses has error\n                      if (\n                        errorResponses > 0\n                        && allResponses === errorResponses\n                      ) {\n                        return reject(data);\n                      }\n                    }\n                  }\n\n                  // Handle error from _msearch response\n                  if (data && data.responses instanceof Array) {\n                    const allResponses = data.responses.length;\n                    const errorResponses = data.responses.filter(entry => Object.prototype.hasOwnProperty.call(entry, 'error')).length;\n                    // reject only when all responses has error\n                    if (allResponses === errorResponses) {\n                      return reject(data);\n                    }\n                  }\n                  const response = Object.assign({}, data, {\n                    _timestamp: timestamp,\n                    _headers: responseHeaders,\n                  });\n                  return resolve(response);\n                })\n                .catch(e => reject(e));\n            })\n            .catch(e => reject(e));\n        })\n        .catch(err => reject(err));\n    } catch (e) {\n      return reject(e);\n    }\n  });\n}\nexport default fetchRequest;\n","import { removeUndefined, validate } from '../../utils/index';\n\n/**\n * Index Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n * @param {String} args.id\n */\nfunction indexApi(args) {\n  const parsedArgs = removeUndefined(args);\n  // Validate arguments\n  const valid = validate(parsedArgs, {\n    body: 'object',\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n  const { type = '_doc', id, body } = parsedArgs;\n\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n  delete parsedArgs.id;\n\n  let path;\n  if (id) {\n    path = type ? `${type}/${encodeURIComponent(id)}` : encodeURIComponent(id);\n  } else {\n    path = type;\n  }\n  return this.performFetchRequest({\n    method: 'POST',\n    path,\n    params: parsedArgs,\n    body,\n  });\n}\nexport default indexApi;\n","import { removeUndefined, validate } from '../../utils/index';\n\n/**\n * Get Service\n * @param {Object} args\n * @param {String} args.type\n * @param {String} args.id\n */\nfunction getApi(args) {\n  const parsedArgs = removeUndefined(args);\n  // Validate arguments\n  const valid = validate(parsedArgs, {\n    id: 'string|number',\n  });\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  const { type = '_doc', id } = parsedArgs;\n\n  delete parsedArgs.type;\n  delete parsedArgs.id;\n\n  const path = `${type}/${encodeURIComponent(id)}`;\n\n  return this.performFetchRequest({\n    method: 'GET',\n    path,\n    params: parsedArgs,\n  });\n}\nexport default getApi;\n","import { removeUndefined, validate } from '../../utils/index';\n\n/**\n * Update Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n * @param {String} args.id\n */\nfunction updateApi(args) {\n  const parsedArgs = removeUndefined(args);\n  // Validate arguments\n  const valid = validate(parsedArgs, {\n    id: 'string|number',\n    body: 'object',\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  const { type = '_doc', id, body } = parsedArgs;\n  delete parsedArgs.type;\n  delete parsedArgs.id;\n  delete parsedArgs.body;\n  const path = `${type}/${encodeURIComponent(id)}/_update`;\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path,\n    params: parsedArgs,\n    body,\n  });\n}\nexport default updateApi;\n","import { removeUndefined, validate } from '../../utils/index';\n\n/**\n * Delete Service\n * @param {Object} args\n * @param {String} args.type\n * @param {String} args.id\n */\nfunction deleteApi(args) {\n  const parsedArgs = removeUndefined(args);\n  // Validate arguments\n  const valid = validate(parsedArgs, {\n    id: 'string|number',\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  const { type = '_doc', id } = parsedArgs;\n  delete parsedArgs.type;\n  delete parsedArgs.id;\n\n  const path = `${type}/${encodeURIComponent(id)}`;\n\n  return this.performFetchRequest({\n    method: 'DELETE',\n    path,\n    params: parsedArgs,\n  });\n}\nexport default deleteApi;\n","import { removeUndefined, validate } from '../../utils/index';\n\n/**\n * Bulk Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n */\nfunction bulkApi(args) {\n  const parsedArgs = removeUndefined(args);\n  // Validate arguments\n  const valid = validate(parsedArgs, {\n    body: 'object',\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  const { type, body } = parsedArgs;\n\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n\n  let path;\n  if (type) {\n    path = `${type}/_bulk`;\n  } else {\n    path = '_bulk';\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path,\n    params: parsedArgs,\n    body,\n  });\n}\nexport default bulkApi;\n","import { removeUndefined, validate } from '../../utils/index';\n\n/**\n * Search Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n */\nfunction searchApi(args) {\n  const parsedArgs = removeUndefined(args);\n  // Validate arguments\n  const valid = validate(parsedArgs, {\n    body: 'object',\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  let type;\n  if (Array.isArray(parsedArgs.type)) {\n    type = parsedArgs.type.join();\n  } else {\n    // eslint-disable-next-line\n    type = parsedArgs.type;\n  }\n\n  const { body } = parsedArgs;\n\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n\n  let path;\n  if (type) {\n    path = `${type}/_search`;\n  } else {\n    path = '_search';\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path,\n    params: parsedArgs,\n    body,\n  });\n}\nexport default searchApi;\n","import { removeUndefined, validate } from '../../utils/index';\n\n/**\n * Msearch Service\n * @param {Object} args\n * @param {String} args.type\n * @param {Object} args.body\n */\nfunction msearchApi(args) {\n  const parsedArgs = removeUndefined(args);\n  // Validate arguments\n  const valid = validate(parsedArgs, {\n    body: 'object',\n  });\n  if (valid !== true) {\n    throw valid;\n  }\n\n  let type;\n  if (Array.isArray(parsedArgs.type)) {\n    type = parsedArgs.type.join();\n  } else {\n    ({ type } = parsedArgs);\n  }\n\n  const { body } = parsedArgs;\n\n  delete parsedArgs.type;\n  delete parsedArgs.body;\n\n  let path;\n  if (type) {\n    path = `${type}/_msearch`;\n  } else {\n    path = '_msearch';\n  }\n\n  return this.performFetchRequest({\n    method: 'POST',\n    path,\n    params: parsedArgs,\n    body,\n  });\n}\nexport default msearchApi;\n","import {\n  getTelemetryHeaders,\n  getMongoRequest,\n  removeUndefined,\n  validateRSQuery,\n} from '../../utils/index';\n\n/**\n * ReactiveSearch API Service for v3\n * @param {Array<Object>} query\n * @param {Object} settings\n * @param {boolean} settings.recordAnalytics\n * @param {boolean} settings.userId\n * @param {boolean} settings.enableQueryRules\n * @param {boolean} settings.customEvents\n */\nfunction reactiveSearchApi(query, settings) {\n  const parsedSettings = removeUndefined(settings);\n\n  // Validate query\n  const valid = validateRSQuery(query);\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  const body = {\n    settings: parsedSettings,\n    query,\n  };\n\n  if (this.mongodb) {\n    Object.assign(body, { mongodb: getMongoRequest(this.app, this.mongodb) });\n  }\n  return this.performFetchRequest({\n    method: 'POST',\n    path: '_reactivesearch',\n    body,\n    headers: getTelemetryHeaders(this.enableTelemetry, !this.mongodb),\n    isRSAPI: true,\n    isMongoRequest: !!this.mongodb,\n  });\n}\nexport default reactiveSearchApi;\n","import {\n  removeUndefined,\n  validateRSQuery,\n  getMongoRequest,\n  getTelemetryHeaders,\n} from '../../utils/index';\n\n/**\n * ReactiveSearch API Service for v3\n * @param {Array<Object>} query\n * @param {Object} settings\n * @param {boolean} settings.recordAnalytics\n * @param {boolean} settings.userId\n * @param {boolean} settings.enableQueryRules\n * @param {boolean} settings.customEvents\n */\nfunction reactiveSearchv3Api(query, settings) {\n  const parsedSettings = removeUndefined(settings);\n\n  // Validate query\n  const valid = validateRSQuery(query);\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  const body = {\n    settings: parsedSettings,\n    query,\n  };\n  if (this.mongodb) {\n    Object.assign(body, { mongodb: getMongoRequest(this.app, this.mongodb) });\n  }\n  return this.performFetchRequest({\n    method: 'POST',\n    path: '_reactivesearch.v3',\n    body,\n    headers: getTelemetryHeaders(this.enableTelemetry, !this.mongodb),\n    isRSAPI: true,\n    isMongoRequest: !!this.mongodb,\n  });\n}\nexport default reactiveSearchv3Api;\n","/**\n * To get mappings\n */\nfunction getMappings() {\n  return this.performFetchRequest({\n    method: 'GET',\n    path: '_mapping',\n  });\n}\nexport default getMappings;\n","import {\n  getMongoRequest,\n  getTelemetryHeaders,\n  removeUndefined,\n  validateRSQuery,\n} from '../../utils/index';\n\n/**\n * ReactiveSearch suggestions API for v3\n * @param {Array<Object>} query\n * @param {Object} settings\n * @param {boolean} settings.recordAnalytics\n * @param {boolean} settings.userId\n * @param {boolean} settings.enableQueryRules\n * @param {boolean} settings.customEvents\n */\nfunction getSuggestionsv3Api(query, settings) {\n  const parsedSettings = removeUndefined(settings);\n\n  // Validate query\n  const valid = validateRSQuery(query);\n\n  if (valid !== true) {\n    throw valid;\n  }\n\n  const body = {\n    settings: parsedSettings,\n    query,\n  };\n\n  if (this.mongodb) {\n    Object.assign(body, { mongodb: getMongoRequest(this.app, this.mongodb) });\n  }\n  return this.performFetchRequest({\n    method: 'POST',\n    path: '_reactivesearch.v3',\n    body,\n    headers: getTelemetryHeaders(this.enableTelemetry),\n    isRSAPI: true,\n    isSuggestionsAPI: true,\n    isMongoRequest: !!this.mongodb,\n  });\n}\n\nexport default getSuggestionsv3Api;\n","import AppBaseClient from './core/index';\nimport fetchRequest from './core/request/fetch';\nimport indexApi from './core/api/index';\nimport getApi from './core/api/get';\nimport updateApi from './core/api/update';\nimport deleteApi from './core/api/delete';\nimport bulkApi from './core/api/bulk';\nimport searchApi from './core/api/search';\nimport msearchApi from './core/api/msearch';\nimport reactiveSearchApi from './core/api/reactiveSearchApi';\nimport reactiveSearchv3Api from './core/api/reactiveSearchv3Api';\nimport getMappingsApi from './core/api/getMappings';\nimport { encodeHeaders } from './utils/index';\nimport getSuggestionsv3Api from './core/api/getSuggestionsv3Api';\n\nexport default function appbasejs(config) {\n  const client = new AppBaseClient(config);\n\n  AppBaseClient.prototype.performFetchRequest = fetchRequest;\n\n  AppBaseClient.prototype.index = indexApi;\n\n  AppBaseClient.prototype.get = getApi;\n\n  AppBaseClient.prototype.update = updateApi;\n\n  AppBaseClient.prototype.delete = deleteApi;\n\n  AppBaseClient.prototype.bulk = bulkApi;\n\n  AppBaseClient.prototype.search = searchApi;\n\n  AppBaseClient.prototype.msearch = msearchApi;\n\n  AppBaseClient.prototype.reactiveSearch = reactiveSearchApi;\n\n  AppBaseClient.prototype.reactiveSearchv3 = reactiveSearchv3Api;\n\n  AppBaseClient.prototype.getQuerySuggestions = getSuggestionsv3Api;\n\n  AppBaseClient.prototype.getMappings = getMappingsApi;\n\n  AppBaseClient.prototype.setHeaders = function setHeaders(\n    headers = {},\n    shouldEncode = false,\n  ) {\n    // Encode headers\n    if (shouldEncode) {\n      this.headers = encodeHeaders(headers);\n    } else {\n      this.headers = headers;\n    }\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Appbase = client;\n  }\n  return client;\n}\n"],"names":["url","pattern","RegExp","matches","match","protocol","auth","host","path","query","hash","validateRSQuery","Object","prototype","toString","call","i","length","q","Error","id","validate","object","fields","invalid","emptyFor","keys","forEach","key","matchedType","split","find","type","push","missing","removeUndefined","value","constructor","JSON","parse","stringify","getMongoRequest","app","mongo","mongodb","index","db","collection","getTelemetryHeaders","enableTelemetry","shouldSetHeaders","headers","assign","backendAlias","dataTypes","checkDataType","temp","Array","isArray","elasticsearch","AppBase","config","URL","slice","backendName","schema","SCHEMA","passedProperties","passedPropertiesKeys","filter","propertyKey","acceptedProperties","requiredProperties","propName","required","requiredProperty","includes","passedPropertyKey","acceptedTypes","receivedPropertyType","join","credentials","username","password","substring","indexOf","isAppbase","hasOwnProperty","obj","prop","xs","stringifyPrimitive","v","isFinite","sep","eq","name","undefined","map","objectKeys","k","ks","encodeURIComponent","f","res","qs","options","regexp","maxKeys","len","kstr","vstr","x","replace","idx","substr","decodeURIComponent","encode","decode","global","self","this","__self__","F","fetch","DOMException","exports","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","Headers","append","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","then","text","readAsText","chars","fromCharCode","readArrayBufferAsText","json","oldValue","has","callback","thisArg","values","entries","methods","Request","input","method","upcased","mode","signal","toUpperCase","referrer","form","trim","bytes","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","fetchRequest","args","parsedArgs","params","isRSAPI","isSuggestionsAPI","isMongoRequest","_this","bodyCopy","contentType","endsWith","timestamp","Date","now","Authorization","charCode","str","output","block","charAt","charCodeAt","btoa","requestOptions","arrayBody","item","responseHeaders","paramsString","querystring","finalURL","transformRequest","tarnsformRequestPromise","handleTransformRequest","ts","transformedRequest","getTime","data","errorResponses","allResponses","execute","responses","entry","catch","indexApi","valid","performFetchRequest","getApi","updateApi","deleteApi","bulkApi","searchApi","msearchApi","reactiveSearchApi","settings","parsedSettings","reactiveSearchv3Api","getMappings","getSuggestionsv3Api","client","AppBaseClient","update","delete","bulk","search","msearch","reactiveSearch","reactiveSearchv3","getQuerySuggestions","getMappingsApi","setHeaders","shouldEncode","encodedHeaders","encodeURI","encodeHeaders","window","Appbase"],"mappings":"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"}